import toee, templeplus.pymod, sys, tpdp, traceback, debug

###################################################
def GetConditionName():
	return "Template"

print("Registering " + GetConditionName())
###################################################

def OnQueryReturnTrue(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjD20Query)
	
	evt_obj.return_val = 1
	return 0

def OnQueryReturnFalse(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjD20Query)
	
	evt_obj.return_val = 0
	return 0

def OnGetMoveSpeed(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjMoveSpeed)
	return 0

def OnGetAttackerConcealmentMissChance(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjObjectBonus)

	evt_obj.bonus_list.add(50, 0, 189) #{189}{~Blinded~[TAG_BLINDED]}
	return 0

def OnGetEffectTooltip(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjEffectTooltip)

	evt_obj.append(tpdp.hash("NETTED"), -1, "")
	return 0

def OnGetTooltip(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjTooltip)

	evt_obj.append("Entanged")
	return 0

def OnToHitBonusFromDefenderCondition(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjAttack)

	evt_obj.bonus_list.add(2, 0, 161) #{161}{Attacker is not Visible}
	return 0

def S_Killed(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	return 0

def OnToHitBonusBase(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjAttack)

	evt_obj.attack_packet.set_flags(evt_obj.attack_packet.get_flags() | toee.D20CAF_TOUCH_ATTACK)
	return 0

def OnConditionAdd(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	return

def OnGetSkillLevel(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjAttack)
	
	lodged_quills = args.get_arg(0)
	if (lodged_quills):
		evt_obj.bonus_list.add(-lodged_quills, 12, LODGED_QUILLS_PENALTY_MESSAGE.format(lodged_quills))
	return 0

def OnDealingDamage(attachee, args, evt_obj):
	assert isinstance(attachee, toee.PyObjHandle)
	assert isinstance(args, tpdp.EventArgs)
	assert isinstance(evt_obj, tpdp.EventObjDamage)
	try:
		print("Net_Throw_OnDealingDamage")
		tgt = evt_obj.attack_packet.target
		print("target: {}".format(tgt))
		print("event_key: {}".format(evt_obj.attack_packet.event_key))
		flags = evt_obj.attack_packet.get_flags()
		hit = flags & toee.D20CAF_HIT
		print("hit: {}, flags: {}".format(hit, flags))
		if (hit and tgt):
			print("adding condition netted to {}".format(tgt))
			dc_BreakFree = args.get_arg(0)
			dc_EscapeArtist = args.get_arg(1)
			tgt.condition_add_with_args("netted", dc_BreakFree, dc_EscapeArtist)
		else: print("missed")
		evt_obj.damage_packet.final_damage = 0
	except Exception, e:
		print "Net_Throw_OnDealingDamage error:"
		print '-'*60
		traceback.print_exc(file=sys.stdout)
		print '-'*60		
		debugg.breakp("error")
	return 0

modObj = templeplus.pymod.PythonModifier(GetConditionName(), 3) # reserved
modObj.AddHook(toee.ET_OnD20Query, toee.EK_Q_Critter_Is_Blinded, OnQueryReturnTrue, ())
modObj.AddHook(toee.ET_OnD20Query, toee.EK_Q_AOOPossible, OnQueryReturnFalse, ())
modObj.AddHook(toee.ET_OnGetMoveSpeed, toee.EK_NONE, OnGetMoveSpeed, ())
modObj.AddHook(toee.ET_OnGetAttackerConcealmentMissChance, toee.EK_NONE, OnGetAttackerConcealmentMissChance, ())
modObj.AddHook(toee.ET_OnGetEffectTooltip, toee.EK_NONE, OnGetEffectTooltip, ())
modObj.AddHook(toee.ET_OnGetTooltip, toee.EK_NONE, OnGetTooltip, ())
modObj.AddHook(toee.ET_OnToHitBonusFromDefenderCondition, toee.EK_NONE, OnToHitBonusFromDefenderCondition, ())
modObj.AddHook(toee.ET_OnD20Signal, toee.EK_S_Killed, S_Killed, ())
modObj.AddHook(toee.ET_OnToHitBonusBase, toee.EK_NONE, OnToHitBonusBase, ())
modObj.AddHook(toee.ET_OnGetSkillLevel, toee.EK_NONE, OnGetSkillLevel, ())
modObj.AddHook(toee.ET_OnDealingDamage, toee.EK_NONE, OnDealingDamage, ())